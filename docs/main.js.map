{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/experience/experience.component.ts","./src/app/components/experience/experience.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/formation/formation.component.ts","./src/app/components/formation/formation.component.html","./src/app/components/formation/formations.component.ts","./src/app/components/formation/formations.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/hobby/hobby.component.ts","./src/app/components/hobby/hobby.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/components/mission/mission.component.ts","./src/app/components/mission/mission.component.html","./src/app/components/skill/skill.component.ts","./src/app/components/skill/skill.component.html","./src/app/components/thematic/thematic.component.ts","./src/app/components/thematic/thematic.component.html","./src/app/pages/four-oh-four/four-oh-four.component.ts","./src/app/pages/four-oh-four/four-oh-four.component.html","./src/app/pages/job/job.component.ts","./src/app/pages/job/job.component.html","./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/services/data.service.ts","./src/app/utils/languages.ts","./src/app/utils/prismic.helper.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Curriculum-vitae';\r\n}\r\n","<div class=\"app\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { RouterModule, Routes, ExtraOptions } from '@angular/router';\r\nimport { IvyCarouselModule } from 'angular-responsive-carousel';\r\n\r\n// Components\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './pages/main/main.component';\r\nimport { JobComponent } from './pages/job/job.component';\r\nimport { FourOhFourComponent } from './pages/four-oh-four/four-oh-four.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { ThematicComponent } from './components/thematic/thematic.component';\r\nimport { ExperienceComponent } from './components/experience/experience.component';\r\nimport { MissionComponent } from './components/mission/mission.component';\r\nimport { HobbyComponent } from './components/hobby/hobby.component';\r\nimport { SkillComponent } from './components/skill/skill.component';\r\nimport { FormationComponent } from './components/formation/formation.component';\r\nimport { FormationsComponent } from './components/formation/formations.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\n\r\n// Services\r\nimport { DataService } from './services/data.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'fr', component: MainComponent },\r\n  { path: 'en', component: MainComponent },\r\n  { path: 'experience/:id', component: JobComponent },\r\n  { path: 'not-found', component: FourOhFourComponent },\r\n  { path: '', redirectTo: '/fr', pathMatch: 'full'  },\r\n  { path: '**', redirectTo: 'not-found' },\r\n];\r\n\r\nconst routerOptions: ExtraOptions = {\r\n  scrollPositionRestoration: 'enabled',\r\n  anchorScrolling: 'enabled',\r\n  scrollOffset: [0, 32],\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    JobComponent,\r\n    FourOhFourComponent,\r\n    LayoutComponent,\r\n    ThematicComponent,\r\n    ExperienceComponent,\r\n    HobbyComponent,\r\n    SkillComponent,\r\n    FormationComponent,\r\n    FormationsComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MissionComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes, routerOptions),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule,\r\n    IvyCarouselModule,\r\n  ],\r\n  providers: [DataService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport * as faIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as model from '../../types/prismic';\r\n\r\n@Component({\r\n  selector: 'app-experience',\r\n  templateUrl: './experience.component.html',\r\n  styleUrls: ['./experience.component.scss'],\r\n})\r\nexport class ExperienceComponent implements OnInit {\r\n  public displayContent = true;\r\n  public headerIcon = this.displayContent\r\n    ? faIcons['faCaretDown']\r\n    : faIcons['faCaretLeft'];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  dateToString(stringDate: string): string {\r\n    const date = new Date(stringDate);\r\n\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n    }).format(date);\r\n  }\r\n\r\n  onToggleDisplayContent(): any {\r\n    console.log('toggleDisplayContent');\r\n    this.displayContent = !this.displayContent;\r\n    this.headerIcon = this.displayContent\r\n      ? faIcons['faCaretDown']\r\n      : faIcons['faCaretLeft'];\r\n  }\r\n\r\n  @Input()\r\n  get model(): model.Experience {\r\n    return this._model;\r\n  }\r\n  set model(model: model.Experience) {\r\n    this._model = model;\r\n  }\r\n  private _model: model.Experience = undefined;\r\n}\r\n","<div *ngIf=\"model\" class=\"card\">\r\n  <header class=\"card-header\">\r\n    <div class=\"card-header-title experience-title\">\r\n      <p class=\"title is-4\">{{ model.title }}</p>\r\n      <p class=\"title is-5\">\r\n        {{\r\n          model.to\r\n            ? \"From \" +\r\n              dateToString(model.from) +\r\n              \" to \" +\r\n              dateToString(model.to)\r\n            : \"Since \" + dateToString(model.from)\r\n        }}\r\n      </p>\r\n    </div>\r\n    <button\r\n      class=\"card-header-icon\"\r\n      aria-label=\"more options\"\r\n      (click)=\"onToggleDisplayContent()\"\r\n    >\r\n      <fa-icon [icon]=\"headerIcon\"></fa-icon>\r\n    </button>\r\n  </header>\r\n  <div *ngIf=\"displayContent\" class=\"card-content\">\r\n    <div class=\"content\">\r\n      <p>{{ model.description }}</p>\r\n      <div class=\"missions\">\r\n        <app-mission\r\n          *ngFor=\"let mission of model.missions\"\r\n          [model]=\"mission\"\r\n        ></app-mission>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n  <div class=\"content has-text-centered\">\r\n    <p>\r\n      This page is made with\r\n      <a href=\"https://angular.io/\"><strong>Angular</strong></a> and styled by\r\n      <a href=\"https://bulma.io/\"><strong>Bulma</strong> </a>.\r\n    </p>\r\n  </div>\r\n</footer>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\r\nimport * as model from '../../types/front';\r\n\r\n@Component({\r\n  selector: 'app-formation',\r\n  templateUrl: './formation.component.html',\r\n  styleUrls: ['./formation.component.scss'],\r\n})\r\nexport class FormationComponent implements OnInit {\r\n  public faFlag = faFlag;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Input()\r\n  get model(): model.Timeline {\r\n    return this._model;\r\n  }\r\n  set model(model: model.Timeline) {\r\n    this._model = model;\r\n  }\r\n  private _model: model.Timeline = { isHeader: false, title: '' };\r\n}\r\n","<header class=\"timeline-header\" *ngIf=\"model.isHeader\">\r\n  <span class=\"tag is-primary\">{{ model.title }}</span>\r\n</header>\r\n<div class=\"timeline-item\" *ngIf=\"!model.isHeader\">\r\n  <div class=\"timeline-marker is-icon\">\r\n    <fa-icon [icon]=\"faFlag\"></fa-icon>\r\n  </div>\r\n  <div class=\"timeline-content\">\r\n    <p class=\"heading\">{{ model.title }}</p>\r\n    <p *ngIf=\"model.description\">{{ model.description }}</p>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport * as prismicModel from '../../types/prismic';\r\nimport * as frontModel from '../../types/front';\r\n\r\n@Component({\r\n  selector: 'app-formations',\r\n  templateUrl: './formations.component.html',\r\n  styleUrls: ['./formations.component.scss'],\r\n})\r\nexport class FormationsComponent implements OnInit {\r\n  public timeline: frontModel.Timeline[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  updateViewModel() {\r\n    if (this._model) {\r\n      this.timeline = [];\r\n      this.model.forEach((formation) => {\r\n        if (!formation) {\r\n          return;\r\n        }\r\n\r\n        if (\r\n          !this.timeline.length ||\r\n          (formation.to &&\r\n            this.timeline[this.timeline.length - 1].title !== formation.to)\r\n        ) {\r\n          this.timeline.push(<frontModel.Timeline>{\r\n            isHeader: true,\r\n            title: formation.to,\r\n          });\r\n        }\r\n\r\n        this.timeline.push(<frontModel.Timeline>{\r\n          isHeader: false,\r\n          title: formation.title,\r\n          description: formation.description,\r\n        });\r\n\r\n        if (formation.from !== formation.to) {\r\n          this.timeline.push(<frontModel.Timeline>{\r\n            isHeader: true,\r\n            title: formation.from,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get model(): prismicModel.Formation[] {\r\n    return this._model;\r\n  }\r\n  set model(model: prismicModel.Formation[]) {\r\n    this._model = model;\r\n    console.log('FormationsComponent', { model });\r\n    this.updateViewModel();\r\n  }\r\n  private _model: prismicModel.Formation[] = [];\r\n}\r\n","<div class=\"timeline\">\r\n  <app-formation *ngFor=\"let line of timeline\" [model]=\"line\"></app-formation>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport * as model from 'src/app/types/prismic';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  public faBars = faBars;\r\n\r\n  public data: model.General = undefined;\r\n  private _handleDataLoadedCallback: (data: model.PrismicData) => void;\r\n\r\n  constructor(private dataService: DataService) {\r\n    this._handleDataLoadedCallback = this.handleDataLoadedCallback.bind(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataService.unsubscribeDataLoaded(this._handleDataLoadedCallback);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.subscribeDataLoaded(this._handleDataLoadedCallback);\r\n    this.data = this.dataService.getGeneral();\r\n\r\n    console.log('HeaderComponent-ngOnInit', { data: this.data });\r\n  }\r\n\r\n  private handleDataLoadedCallback(data: model.PrismicData): void {\r\n    if (data) {\r\n      this.data = data.general;\r\n      console.log('HeaderComponent-handleGeneralChange', { data: this.data });\r\n    }\r\n  }\r\n}\r\n","<header class=\"container header\">\r\n  <section class=\"box hero is-success\" *ngIf=\"data\">\r\n    <article class=\"media\">\r\n      <div class=\"media-left\">\r\n        <figure class=\"image is-64x64\">\r\n          <img src=\"{{ data.avatar?.url }}\" alt=\"{{ data.avatar?.alt ?? 'image' }}\" />\r\n        </figure>\r\n      </div>\r\n      <div class=\"media-content\">\r\n        <div *ngIf=\"data\" class=\"content\">\r\n          <h1 class=\"content__title\">{{ data.title }}</h1>\r\n          <div class=\"content__name\">\r\n            <span>{{ data.lastName }}</span>\r\n            <span>{{ data.firstName }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"media-right\">\r\n        <img src=\"{{ data.avatar?.url }}\" alt=\"{{ data.avatar?.alt ?? 'image' }}\" class=\"media-right__icon media-right__language-icon\">\r\n        <fa-icon\r\n          class=\"media-right__icon media-right__menu-icon\"\r\n          [icon]=\"faBars\"\r\n        ></fa-icon>\r\n      </div>\r\n    </article>\r\n  </section>\r\n</header>\r\n","import { Component, Input } from '@angular/core';\r\nimport * as model from '../../types/prismic';\r\n\r\n@Component({\r\n  selector: 'app-hobby',\r\n  templateUrl: './hobby.component.html',\r\n  styleUrls: ['./hobby.component.scss'],\r\n})\r\nexport class HobbyComponent {\r\n  public images: any[] = [];\r\n\r\n  constructor() {}\r\n\r\n  updateImages() {\r\n    const images: any[] = [];\r\n    if (this._model) {\r\n      this._model.forEach((hobby, i) => {\r\n        if (hobby) {\r\n          images.push({ path: hobby.image });\r\n        }\r\n      });\r\n    }\r\n    this.images = images;\r\n  }\r\n\r\n  @Input()\r\n  get model(): model.Hobby[] {\r\n    return this._model;\r\n  }\r\n  set model(model: model.Hobby[]) {\r\n    this._model = model;\r\n\r\n    this.updateImages();\r\n  }\r\n  private _model: model.Hobby[] = [];\r\n}\r\n","<div class=\"hobbies\">\r\n  <carousel\r\n    [loop]=\"true\"\r\n    [autoplay]=\"true\"\r\n    [cellsToShow]=\"3\"\r\n    [autoplayInterval]=\"3000\"\r\n    [images]=\"images\"\r\n  >\r\n  </carousel>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}","<div class=\"layout\">\r\n  <app-header class=\"header\"></app-header>\r\n  <div class=\"content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport * as model from '../../types/prismic';\r\n\r\n@Component({\r\n  selector: 'app-mission',\r\n  templateUrl: './mission.component.html',\r\n  styleUrls: ['./mission.component.scss'],\r\n})\r\nexport class MissionComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Input()\r\n  get model(): model.Mission {\r\n    return this._model;\r\n  }\r\n  set model(model: model.Mission) {\r\n    this._model = model;\r\n  }\r\n  private _model: model.Mission = undefined;\r\n}\r\n","<div *ngIf=\"model\">\r\n  <blockquote>\r\n    <p class=\"title is-6\">{{ model.title }}</p>\r\n    <p class=\"description\">{{ model.description}}</p>\r\n  </blockquote>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n  faStar as fasStar,\r\n  faStarHalfAlt as fasStarHalfAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons';\r\nimport * as model from '../../types/prismic';\r\n\r\n@Component({\r\n  selector: 'app-skill',\r\n  templateUrl: './skill.component.html',\r\n  styleUrls: ['./skill.component.scss'],\r\n})\r\nexport class SkillComponent implements OnInit {\r\n  public fasStar = fasStar;\r\n  public fasStarHalfAlt = fasStarHalfAlt;\r\n  public farStar = farStar;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Input()\r\n  get model(): model.Skill {\r\n    return this._model;\r\n  }\r\n  set model(model: model.Skill) {\r\n    this._model = model;\r\n  }\r\n  private _model: model.Skill = undefined;\r\n\r\n  @Input()\r\n  get level(): number {\r\n    return this._level;\r\n  }\r\n  set level(level: number) {\r\n    this._level = level;\r\n  }\r\n  private _level = 0;\r\n}\r\n","<div *ngIf=\"model\" [ngClass]=\"'skill skill--' + level\" >\r\n  <div class=\"skill__content\">\r\n    <h3 *ngIf=\"!level\" class=\"skill__content__title\">{{ model.title }}</h3>\r\n    <span *ngIf=\"level\" class=\"skill__content__title\">{{ model.title }}</span>\r\n    <div [ngClass]=\"'skill-score' + (level === 1 ? ' strong':'')\" *ngIf=\"model.score\">\r\n      <div *ngFor=\"let starNumber of [0.0, 1.0, 2.0, 3.0, 4.0]\">\r\n        <fa-icon\r\n          *ngIf=\"starNumber + 1 <= model.score\"\r\n          [icon]=\"fasStar\"\r\n        ></fa-icon>\r\n        <fa-icon\r\n          *ngIf=\"starNumber + 0.5 == model.score\"\r\n          [icon]=\"fasStarHalfAlt\"\r\n        ></fa-icon>\r\n        <fa-icon *ngIf=\"starNumber >= model.score\" [icon]=\"farStar\"></fa-icon>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"skill__sub-skills\"\r\n    *ngIf=\"model.skills\"\r\n  >\r\n    <app-skill\r\n      *ngFor=\"let skill of model.skills\"\r\n      [model]=\"skill\"\r\n      [level]=\"level + 1\"\r\n    ></app-skill>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport * as model from '../../types/prismic';\r\nimport { IconPrefix, IconName } from '@fortawesome/fontawesome-svg-core';\r\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n  selector: 'app-thematic',\r\n  templateUrl: './thematic.component.html',\r\n  styleUrls: ['./thematic.component.scss'],\r\n})\r\nexport class ThematicComponent {\r\n  public iconName: IconName = 'coffee';\r\n\r\n  constructor(library: FaIconLibrary) {\r\n    library.addIconPacks(fas);\r\n  }\r\n\r\n  async UpdateIcon(): Promise<void> {\r\n    if (this._model?.icon) {\r\n      const iconName: IconName | undefined = this._model?.icon as IconName;\r\n\r\n      if (iconName) {\r\n        console.log('UpdateIcon', { iconName });\r\n        this.iconName = iconName;\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get model(): model.Thematic {\r\n    return this._model;\r\n  }\r\n  set model(model: model.Thematic) {\r\n    this._model = model;\r\n    this.UpdateIcon();\r\n  }\r\n  private _model: model.Thematic = undefined;\r\n}\r\n","<div *ngIf=\"model\" class=\"panel is-success mb-3\">\r\n  <h2 class=\"panel-heading\">\r\n    <fa-icon class=\"panel-heading__icon\" [icon]=\"['fas', this.iconName ]\"></fa-icon>\r\n    <span class=\"panel-heading__title\">{{ model.title }}</span>\r\n  </h2>\r\n  <div\r\n    class=\"panel-block\"\r\n    *ngIf=\"model.formations && model.formations.length > 0\"\r\n  >\r\n    <app-formations [model]=\"model.formations\"></app-formations>\r\n  </div>\r\n  <div *ngIf=\"model.experiences && model.experiences.length > 0\">\r\n    <div class=\"panel-block\" *ngFor=\"let experience of model.experiences\">\r\n      <app-experience\r\n        [model]=\"experience\"\r\n        class=\"column is-full\"\r\n      ></app-experience>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"model.skills && model.skills.length > 0\" class=\"main-skills\">\r\n    <app-skill\r\n      *ngFor=\"let skill of model.skills\"\r\n      [model]=\"skill\"\r\n      class=\"main-skill\"\r\n    ></app-skill>\r\n  </div>\r\n  <div *ngIf=\"model.hobbies && model.hobbies.length > 0\" class=\"is-full\">\r\n    <app-hobby [model]=\"model.hobbies\"></app-hobby>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-four-oh-four',\r\n  templateUrl: './four-oh-four.component.html',\r\n  styleUrls: ['./four-oh-four.component.scss']\r\n})\r\nexport class FourOhFourComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>four-oh-four works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html',\r\n  styleUrls: ['./job.component.scss']\r\n})\r\nexport class JobComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-layout>\r\n  <p>job works!</p>\r\n</app-layout>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { fas, IconName } from '@fortawesome/free-solid-svg-icons';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Languages } from 'src/app/utils/languages';\r\nimport * as model from '../../types/prismic';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n  private _handleDataLoadedCallback: (data: model.PrismicData) => void;\r\n  public data: model.Thematic[] = [];\r\n  public iconNames: IconName[] = [];\r\n  public language: Languages = Languages.FRENCH;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    library: FaIconLibrary\r\n  ) {\r\n    this.dataService.setLanguage(\r\n      router.url.includes('en') ? Languages.ENGLISH : Languages.FRENCH\r\n    );\r\n    library.addIconPacks(fas);\r\n    this._handleDataLoadedCallback = this.handleDataLoadedCallback.bind(this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.subscribeDataLoaded(this._handleDataLoadedCallback);\r\n    this.data = this.dataService.getThematics();\r\n\r\n    console.log('MainComponent-ngOnInit', { data: this.data });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataService.unsubscribeDataLoaded(this._handleDataLoadedCallback);\r\n  }\r\n\r\n  private handleDataLoadedCallback(data: model.PrismicData): void {\r\n    if (data) {\r\n      this.data = data.thematics;\r\n      console.log('MainComponent-handleThematicsChangeCallback', {\r\n        data: this.data,\r\n      });\r\n      this.UpdateIcons();\r\n    }\r\n  }\r\n\r\n  private UpdateIcons() {\r\n    if (this.data) {\r\n      this.data.forEach((item, index) => {\r\n        const iconName: IconName | undefined = item?.icon as IconName;\r\n        console.log('UpdateIcon', { iconName });\r\n        this.iconNames[index] = iconName ?? 'circle-exclamation';\r\n      });\r\n    }\r\n  }\r\n}\r\n","<app-layout>\r\n  <div class=\"main container\">\r\n    <section class=\"menu\">\r\n      <article class=\"panel menu__sticky\">\r\n        <div *ngFor=\"let thematic of data; let index = index;\">\r\n          <a\r\n            *ngIf=\"thematic\"\r\n            [routerLink]=\"'.'\"\r\n            [fragment]=\"thematic.anchor\"\r\n            class=\"panel-block is-active\"\r\n          >\r\n              <fa-icon class=\"menu__icon\" [icon]=\"['fas', this.iconNames[index] ]\"></fa-icon>\r\n              <span class=\"menu__title\">{{ thematic.title }}</span>\r\n          </a>\r\n        </div>\r\n      </article>\r\n    </section>\r\n    <div *ngFor=\"let thematic of data\" [attr.id]=\"thematic?.anchor\" class=\"anchor\">\r\n      <app-thematic [model]=\"thematic\"></app-thematic>\r\n    </div>\r\n  </div>\r\n</app-layout>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as prismic from '@prismicio/client';\r\nimport * as model from '../types/prismic';\r\nimport { PrismicHelper } from '../utils/prismic.helper';\r\nimport { Languages } from '../utils/languages';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataService {\r\n  private _data: { [id: string]: model.PrismicData } = {};\r\n  private _dataCallbacks: ((data: model.PrismicData) => void)[] = [];\r\n  private _language: Languages = Languages.FRENCH;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    console.log('DataService-ngOnInit');\r\n    const endpoint = prismic.getEndpoint(environment.prismic.endPoint);\r\n    const client = prismic.createClient(endpoint, {\r\n      accessToken: environment.prismic.accesToken,\r\n    });\r\n\r\n    this.init(client);\r\n  }\r\n\r\n  public getLanguage(): Languages {\r\n    return this._language;\r\n  }\r\n\r\n  public setLanguage(language: Languages): void {\r\n    if (this._language !== language) {\r\n      this._language = language;\r\n      this.raiseDataLoaded();\r\n    }\r\n  }\r\n\r\n  public getGeneral(): model.General {\r\n    return this._data[this._language]?.general;\r\n  }\r\n\r\n  public getThematics(): model.Thematic[] {\r\n    return this._data[this._language]?.thematics;\r\n  }\r\n\r\n  public subscribeDataLoaded(\r\n    callback: (data: model.PrismicData) => void\r\n  ): void {\r\n    if (callback) {\r\n      this._dataCallbacks.push(callback);\r\n    }\r\n  }\r\n\r\n  public unsubscribeDataLoaded(\r\n    callback: (data: model.PrismicData) => void\r\n  ): void {\r\n    if (callback) {\r\n      this._dataCallbacks = this._dataCallbacks.filter((c) => c !== callback);\r\n    }\r\n  }\r\n\r\n  private raiseDataLoaded(): void {\r\n    this._dataCallbacks.forEach((callback) => {\r\n      if (callback) {\r\n        callback(this._data[this._language]);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async init(client: prismic.Client): Promise<void> {\r\n    const loadDataPromises: Promise<void>[] = Object.values(Languages).map(\r\n      async (value) => {\r\n        await this.LoadDataByLanguage(client, value);\r\n      }\r\n    );\r\n\r\n    await Promise.all(loadDataPromises);\r\n\r\n    console.log('init - Promise all finished');\r\n    this.raiseDataLoaded();\r\n  }\r\n\r\n  private async LoadDataByLanguage(\r\n    client: prismic.Client,\r\n    language: string\r\n  ): Promise<void> {\r\n    // Do request to prismic\r\n    const languages = await client.getAllByType<any>('availablelanguage', {\r\n      lang: language,\r\n    });\r\n    const common = await client.getByUID<any>('common', 'common', {\r\n      lang: language,\r\n    });\r\n    const skills = await client.getAllByType<any>('skills', {\r\n      lang: language,\r\n    });\r\n    const experiences = await client.getAllByType<any>('experience', {\r\n      lang: language,\r\n    });\r\n    const missions = await client.getAllByType<any>('mission', {\r\n      lang: language,\r\n    });\r\n\r\n    const languageModels = PrismicHelper.GetLanguages(languages);\r\n    const commonModel = PrismicHelper.GetGeneral(common, languageModels);\r\n    const skillModels = PrismicHelper.GetSkills(skills);\r\n    const missionModels = PrismicHelper.GetMissions(missions, skillModels);\r\n    const experienceModels = PrismicHelper.GetExperiences(\r\n      experiences,\r\n      missionModels\r\n    );\r\n\r\n    console.log('init', { skills, experiences, missions });\r\n\r\n    const thematics = await client.getByUID<any>('thematics', 'thematics', {\r\n      fetchLinks: `thematics.skills`,\r\n      lang: language,\r\n    });\r\n    let thematicsModel: model.Thematic[] = [];\r\n    if (thematics) {\r\n      thematicsModel = PrismicHelper.GetThematics(thematics);\r\n\r\n      if (thematicsModel) {\r\n        console.log('init', { thematics: thematicsModel });\r\n\r\n        await Promise.all(\r\n          thematicsModel.map(async (thematicModel) => {\r\n            console.log('init-thematics', { thematicModel });\r\n            if (thematicModel) {\r\n              if (thematicModel.experiences) {\r\n                thematicModel.experiences = thematicModel.experiences.map(\r\n                  (experience: model.Experience) => {\r\n                    return experienceModels.find(\r\n                      (em) => em?.uid == experience?.uid\r\n                    );\r\n                  }\r\n                );\r\n              }\r\n              if (thematicModel.skills) {\r\n                thematicModel.skills = thematicModel.skills.map(\r\n                  (skill: model.Skill) => {\r\n                    return skillModels.find((s) => s?.uid == skill?.uid);\r\n                  }\r\n                );\r\n              }\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n\r\n    if (commonModel && thematicsModel) {\r\n      this._data[language] = {\r\n        general: commonModel,\r\n        thematics: thematicsModel,\r\n      };\r\n    }\r\n  }\r\n}\r\n","export enum Languages {\r\n  'FRENCH' = 'fr-fr',\r\n  'ENGLISH' = 'en-gb',\r\n}\r\n","import * as model from '../types/prismic';\r\n\r\nexport class PrismicHelper {\r\n  static GetGeneral(\r\n    prismicValue: any,\r\n    languages: model.AvailableLanguage[]\r\n  ): model.General {\r\n    if (!prismicValue.data) {\r\n      return undefined;\r\n    }\r\n    const result: model.General = {\r\n      firstName: PrismicHelper.getText(prismicValue.data.firstname),\r\n      lastName: PrismicHelper.getText(prismicValue.data.lastname),\r\n      avatar: {\r\n        alt: PrismicHelper.getText(prismicValue.data.avatar?.alt),\r\n        url: PrismicHelper.getText(prismicValue.data.avatar?.url),\r\n      },\r\n      pageIcon: {\r\n        alt: PrismicHelper.getText(prismicValue.data.page_icon?.alt),\r\n        url: PrismicHelper.getText(prismicValue.data.page_icon?.url),\r\n      },\r\n      pageTitle: PrismicHelper.getText(prismicValue.data.page_title),\r\n      title: PrismicHelper.getText(prismicValue.data.title),\r\n      languages: [],\r\n    };\r\n\r\n    if (prismicValue.data.languages) {\r\n      prismicValue.data.languages.forEach((language: any) => {\r\n        console.log('GetGeneral - languages', {language})\r\n        const languageModel = languages.find((l) => language.language.uid === l.uid);\r\n        if (languageModel) {\r\n          result.languages?.push(languageModel);\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log('GetGeneral', { prismicValue, result });\r\n    return result;\r\n  }\r\n\r\n  static GetLanguages(prismicValues: any): model.AvailableLanguage[] {\r\n    const languages: model.AvailableLanguage[] = prismicValues.map(\r\n      (prismicValue: any) => {\r\n        return this.createLanguage(prismicValue) ?? undefined;\r\n      }\r\n    );\r\n\r\n    console.log('GetLanguages', { prismicValues, languages });\r\n    return languages;\r\n  }\r\n\r\n  static GetThematics(prismicValue: any): model.Thematic[] {\r\n    const result: model.Thematic[] = prismicValue?.data?.body?.map(\r\n      (thematicData: any) => {\r\n        const title = PrismicHelper.getText(thematicData.primary.title);\r\n        const anchor = thematicData.primary.anchor;\r\n        const icon = thematicData.primary.icon;\r\n        const thematic: model.Thematic = {\r\n          title,\r\n          anchor,\r\n          icon,\r\n          formations: [],\r\n          experiences: [],\r\n          skills: [],\r\n          hobbies: [],\r\n        };\r\n\r\n        switch (thematicData.slice_type) {\r\n          case 'cursus':\r\n            thematic.formations = thematicData.items.map((item: any) => {\r\n              const formation = this.createFormation(item);\r\n              if (formation) {\r\n                return formation;\r\n              }\r\n              return;\r\n            });\r\n            break;\r\n\r\n          case 'experiences':\r\n            thematic.experiences = thematicData.items.map((item: any) => {\r\n              const experience: model.Experience = this.createExperience(\r\n                item.experience\r\n              );\r\n              if (experience) {\r\n                return experience;\r\n              }\r\n              return;\r\n            });\r\n            break;\r\n\r\n          case 'skills':\r\n            thematic.skills = thematicData.items.map((item: any) => {\r\n              const skill: model.Skill = this.createSkill(item.skill);\r\n              if (skill) {\r\n                return skill;\r\n              }\r\n              return;\r\n            });\r\n            break;\r\n\r\n          case 'hobbies':\r\n            thematic.hobbies = thematicData.items.map((item: any) => {\r\n              const hobby: model.Hobby = this.createHobby(item);\r\n              if (hobby) {\r\n                return hobby;\r\n              }\r\n              return;\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        return thematic;\r\n      }\r\n    );\r\n\r\n    console.log('GetThematics', { prismicValue, result });\r\n    return result;\r\n  }\r\n\r\n  static GetExperiences(\r\n    prismicValues: any,\r\n    missions: model.Mission[]\r\n  ): model.Experience[] {\r\n    const experiences: model.Experience[] = prismicValues.map(\r\n      (prismicValue: any) => {\r\n        return this.createExperience(prismicValue) ?? undefined;\r\n      }\r\n    );\r\n\r\n    prismicValues.forEach((prismicValue: any) => {\r\n      const experience = experiences.find((m) => m?.uid == prismicValue.uid);\r\n      if (experience && prismicValue.data.missions?.length > 0) {\r\n        experience.missions = prismicValue.data.missions.map((m: any) => {\r\n          return missions.find((m2) => m2?.uid == m.mission.uid);\r\n        });\r\n      }\r\n    });\r\n\r\n    console.log('GetExperiences', { prismicValues, experiences });\r\n\r\n    return experiences;\r\n  }\r\n\r\n  static GetMissions(\r\n    prismicValues: any,\r\n    skills: model.Skill[]\r\n  ): model.Mission[] {\r\n    const missions: model.Mission[] = prismicValues.map((prismicValue: any) => {\r\n      return PrismicHelper.createMission(prismicValue) ?? undefined;\r\n    });\r\n\r\n    prismicValues.forEach((prismicValue: any) => {\r\n      const mission = missions.find((m) => m?.uid == prismicValue.uid);\r\n      if (mission && prismicValue.data.skills?.length > 0) {\r\n        mission.skills = prismicValue.data.skills.map((s: any) => {\r\n          return skills.find((s2) => s2?.uid == s.skill.uid);\r\n        });\r\n      }\r\n    });\r\n\r\n    console.log('GetMissions', { prismicValues, missions });\r\n\r\n    return missions;\r\n  }\r\n\r\n  static GetSkills(prismicValues: any): model.Skill[] {\r\n    const skills: model.Skill[] = prismicValues.map((prismicValue: any) => {\r\n      return this.createSkill(prismicValue) ?? undefined;\r\n    });\r\n\r\n    prismicValues.forEach((prismicValue: any) => {\r\n      const skill = skills.find((s) => s?.uid == prismicValue.uid);\r\n      if (skill && prismicValue.data.skills?.length > 0) {\r\n        skill.skills = prismicValue.data.skills.map((s: any) => {\r\n          return skills.find((s2) => s2?.uid == s.skill.uid);\r\n        });\r\n      }\r\n    });\r\n\r\n    console.log('GetSkills', { prismicValues, skills });\r\n    return skills;\r\n  }\r\n\r\n  private static createLanguage(languageData: any): model.AvailableLanguage {\r\n    const name = PrismicHelper.getText(languageData.data?.name);\r\n    const alt = PrismicHelper.getText(languageData.data?.icon?.alt);\r\n    const url = PrismicHelper.getText(languageData.data?.icon?.url);\r\n\r\n    return {\r\n      uid: languageData.uid,\r\n      icon: {\r\n        alt,\r\n        url,\r\n      },\r\n      code: languageData.lang,\r\n      name,\r\n      isLoaded: !!name,\r\n    };\r\n  }\r\n\r\n  private static createFormation(formationData: any): model.Formation {\r\n    const description = PrismicHelper.getText(formationData.description);\r\n    const title = PrismicHelper.getText(formationData.title);\r\n    const from = formationData.start_year;\r\n    const to = formationData.end_year;\r\n\r\n    return { title, from, description, to };\r\n  }\r\n\r\n  private static createExperience(experienceData: any): model.Experience {\r\n    const description = PrismicHelper.getText(experienceData.data?.description);\r\n    const title = PrismicHelper.getText(experienceData.data?.title);\r\n    const from = experienceData.data?.start_date;\r\n    const to = experienceData.data?.end_date;\r\n    const missions =\r\n      experienceData.data?.missions?.map((item: any) => {\r\n        if (item.mission) {\r\n          return PrismicHelper.createMission(item.mission);\r\n        }\r\n        return;\r\n      }) ?? [];\r\n\r\n    return {\r\n      uid: experienceData.uid,\r\n      title,\r\n      description,\r\n      from,\r\n      to,\r\n      missions: [],\r\n      isLoaded: !!title,\r\n    };\r\n  }\r\n\r\n  private static createMission(experienceData: any): model.Mission {\r\n    const description = PrismicHelper.getText(experienceData.data?.description);\r\n    const title = PrismicHelper.getText(experienceData.data?.title);\r\n\r\n    return {\r\n      uid: experienceData.uid,\r\n      title,\r\n      description,\r\n      'short-description': '',\r\n      skills: [],\r\n      isLoaded: !!title,\r\n    };\r\n  }\r\n\r\n  private static createSkill(skillData: any): model.Skill {\r\n    const title = PrismicHelper.getText(skillData.data?.title);\r\n    const score = skillData.data?.score / 2;\r\n\r\n    return {\r\n      uid: skillData.uid,\r\n      title: title,\r\n      score,\r\n      isLoaded: !!title,\r\n    };\r\n  }\r\n\r\n  private static createHobby(formationData: any): model.Hobby {\r\n    const image = formationData.image.url;\r\n    const title = PrismicHelper.getText(formationData.title);\r\n\r\n    return { title, image };\r\n  }\r\n\r\n  private static getText(source: any): string {\r\n    if (typeof source === 'string') {\r\n      return source;\r\n    } else if (Array.isArray(source) && source.length > 0) {\r\n      return source[0]?.text as string;\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  prismic:{\r\n    endPoint: 'jdufosse',\r\n    accesToken : 'MC5ZcC0takJFQUFDQUF5Y2lX.77-977-977-977-9bwDvv73vv73vv73vv73vv70CP--_ve-_ve-_vSwMA--_vSHvv73vv71a77-977-977-977-9Ru-_vWVy',\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}